<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/mvc 
       http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">



	<mvc:annotation-driven />

    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:game-default.properties</value>
                <value>classpath:game-${env}.properties</value>
                <value>file:${user.home}/game.properties</value>
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>

   <!--  <context:component-scan base-package="com.ea.vanguard.game.simulator.rest"/>   --> 
    <mvc:interceptors>   
        <mvc:interceptor>   
           <mvc:mapping path="/view/*" />
           <bean id="myfilter" class="com.ares.framework.rpc.filter.SessionInterceptor"/>
        </mvc:interceptor> 
   </mvc:interceptors>
  


  <bean id="requestscope" class="com.ares.framework.rpc.context.RpcContext" scope="request" />



	<!-- selects a static view for rendering without the need for an explicit 
		controller -->
	<!-- <mvc:view-controller path="/" view-name="index" /> -->
	<mvc:view-controller path="/" view-name="login" />
    <mvc:view-controller path="default" view-name="default" />	
	<mvc:view-controller path="/admin" view-name="/admin/adduser" />
	<mvc:view-controller path="/logout_success" view-name="logout_success" />
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources -->
	<mvc:resources mapping="/resources/**" location="/web-resources/flatui/" />
	
	<context:component-scan base-package="com.ares.web.controller" />
	<context:component-scan base-package="com.ares.framework.rpc" />
	<context:component-scan base-package="com.ares.app.admincontroller"/>

	
	<!-- This bean sets up the Velocity environment for us based on a root path 
		for templates. Optionally, a properties file can be specified for more control 
		over the Velocity environment, but the defaults are pretty sane for file 
		based template loading. -->
	<!-- 	<bean id="velocityConfig"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath" value="/WEB-INF/views/" />
		<property name="velocityProperties">
            <props>
                <prop key="input.encoding">utf-8</prop>
                <prop key="output.encoding">utf-8</prop>
            </props>
        </property> 
	</bean>
 -->

	<!-- View resolvers can also be configured with ResourceBundles or XML files. 
		If you need different view resolving based on Locale, you have to use the 
		resource bundle resolver. -->
		<!-- <bean class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="suffix" value=".vm" />
		<property name="order" value="1" />
	    <property name="contentType" value="text/html;charset=UTF-8"/> 
		<property name="exposeSpringMacroHelpers" value="false" />
	</bean>
	 -->
	 
	 <bean id="beetlConfig" class="org.beetl.ext.spring.BeetlGroupUtilConfiguration" init-method="init" />
	 
	 <bean id="viewResolver" class="org.beetl.ext.spring.BeetlSpringViewResolver">
		<property name="contentType" value="text/html;charset=UTF-8"></property>
		<property name="prefix" value="WEB-INF/views/"></property>
		<property name="suffix" value=".btl"></property>
	</bean>
	 
	
</beans>
